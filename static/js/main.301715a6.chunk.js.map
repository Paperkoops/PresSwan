{"version":3,"sources":["features/counter/Counter.module.css","features/counter/counterAPI.js","features/counter/counterSlice.js","logo.svg","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","client","address","city","reducers","increment","state","decrement","incrementByAmount","action","payload","decrementByAmount","setClient","setAddress","setCity","extraReducers","builder","addCase","pending","fulfilled","actions","selectCount","counter","script","App","count","useSelector","dispatch","useDispatch","useState","incrementAmount","Number","showModal","setShowModal","className","href","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","id","replace","class","onChange","e","target","type","placeholder","store","configureStore","reducer","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.301715a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__2OpaR\",\"value\":\"Counter_value__N0lMQ\",\"button\":\"Counter_button__3TJ-D\",\"textbox\":\"Counter_textbox__3DkjE\",\"asyncButton\":\"Counter_asyncButton__16dMQ Counter_button__3TJ-D\"};","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 1,\n  status: 'idle',\n  client: '',\n  address: '',\n  city:''\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n    decrementByAmount: (state, action) => {\n      state.value -= action.payload;\n    },\n\n    setClient: (state, action) => {\n      state.client = action.payload;\n    },\n    setAddress: (state, action) => {\n      state.address = action.payload;\n    },\n    setCity: (state, action) => {\n      state.city = action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount, decrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","//import React from 'react';\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  decrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from './features/counter/counterSlice';\nimport logo from './logo.svg';\nimport { Counter } from './features/counter/Counter';\n\nimport './App.css';\nimport { Modal } from \"./Modal\";\nvar curr = 1;\n\n\nconst script = {\n    \"1\": [\n      \"THE GREETING\",\n      \"Good afternoon --A--first_name--B--, my name is Alex and Iâ€™m calling with the local clean energy project in --A--city--B--, how are you doing today?\",\n      [\n        [\n          \"Fine Thanks\",\n          \"Meh\"\n        ],\n        [\n          2,\n          1\n        ]\n      ]\n    ],\n    \"2\": [\n      \"Stating our intent\",\n      \"Listen, --A--first_name--B-- I wonâ€™t take much of your time, the reason for my call is because we are helping homeowners in your area qualify for a no cost solar solution. Are you the homeowner at --A--address1--B--?\",\n      [\n        [\n          \"Yes\",\n          \"No\"\n        ],\n        [\n          3,\n          1\n        ]\n      ]\n    ],\n    \"3\": [\n      \"Building Value\",\n      \"Great, well it seems like youâ€™re a good fit for the program, if you do qualify, we can install a solar system on your roof that produces the energy your home needs and you get to own your power for a lot less than what youâ€™re currently paying.\",\n      [\n        [\n          \"Continue\",\n          \"No\"\n        ],\n        [\n          4,\n          1\n        ]\n      ]\n    ],\"4\": [\n      \"Pique curiosity\",\n      \"These programs are limited, and government credits are running out,\",\n      [\n        [\n          \"Yes\",\n          \"No\"\n        ],\n        [\n          5,\n          1\n        ]\n      ]\n    ],\"5\": [\n      \"Create urgency\",\n      \"Thanks to SB-100, Solar energy is helping thousands of families save money and take control.\",\n      [\n        [\n          \"Yes\",\n          \"No\"\n        ],\n        [\n          6,\n          1\n        ]\n      ]\n    ],\"6\": [\n      \"The takeaway\",\n      \"Not everyone qualifies for this solution, however i do want to help you, do you have time today at 6pm or do mornings work better for you?\",\n      [\n        [\n          \"Yes\",\n          \"No\"\n        ],\n        [\n          7,\n          1\n        ]\n      ]\n    ], \"7\": [\n      \"The qualifying questions\",\n      \"Great, i do need to ask you a few qualifying questions: Are you the homeowner at --A--address1--B--?\",\n  \n      [\n        [\n          \"Yes\",\n          \"No\"\n        ],\n        [\n          8,\n          1\n        ]\n      ]\n    ], \"8\": [\n      \"The qualifying questions\",\n      \"is this a single family home?\",\n  \n      [\n        [\n          \"Yes\",\n          \"No\"\n        ],\n        [\n          9,\n          1\n        ]\n      ]\n    ], \"9\": [\n      \"The qualifying questions\",\n      \"is your credits score higher or lower than 600?\",\n  \n      [\n        [\n          \"Yes\",\n          \"No\"\n        ],\n        [\n          10,\n          1\n        ]\n      ]\n    ],\"10\": [\n      \"The qualifying questions\",\n      \"how old is your roof? it's ok if you don't know\",\n  \n      [\n        [\n          \"Yes\",\n          \"No\"\n        ],\n        [\n          11,\n          1\n        ]\n      ]\n    ], \"11\": [\n      \"Goodbye\",\n      \"Excellent --A--first_name--B--, thank you for your trust you are confirmed to for Date and time with one of our expert energy consultants, please have your utility bill handy. We look forward to helping you! Have a bright day!\",\n  \n      [\n        [\n          \"-\",\n          \"Hang up\"\n        ],\n        [\n          1,\n          1\n        ]\n      ]\n    ]\n  }\nfunction App() {\n    const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n  const [client, setClient] = useState('');\n  const [city, setCity] = useState('');\n  const [address, setAddress] = useState('');\n\n  const incrementValue = Number(incrementAmount) || 0;\n    const [showModal, setShowModal] = useState(false);\n\n    const openModal = () => {\n        setShowModal(true);\n      };\n    return (\n      <div className=\"App\">\n          <div className=\"relative min-h-screen md:flex\">\n\n<div className=\"bg-gray-800 text-gray-100 flex justify-between md:hidden\">\n  <a href=\"#\" className=\"block p-4 text-white font-bold\">Better Dev</a>\n\n  <button className=\"mobile-menu-button p-4 focus:outline-none focus:bg-gray-700\">\n    <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\n    </svg>\n  </button>\n</div>\n\n<div className=\"sidebar bg-blue-800 text-blue-100 w-64 space-y-6 py-7 px-2 absolute inset-y-0 left-0 transform -translate-x-full md:relative md:translate-x-0 transition duration-200 ease-in-out\">\n\n  <a href=\"#\" className=\"text-white flex items-center space-x-2 px-4\">\n    <svg className=\"w-8 h-8\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z\" />\n    </svg>\n    <span className=\"text-2xl font-extrabold\">Origo</span>\n  </a>\n\n  <nav>\n    <a \n    href=\"#\" \n    onClick={() => setShowModal(true)} id=\"btn\"\n    className=\"block py-2.5 px-4 rounded transition duration-200 hover:bg-blue-700 hover:text-white\">\n      create new conversation\n    </a>\n    <a href=\"\" className=\"block py-2.5 px-4 rounded transition duration-200 hover:bg-blue-700 hover:text-white\">\n      My stats\n    </a>\n    <a href=\"\" className=\"block py-2.5 px-4 rounded transition duration-200 hover:bg-blue-700 hover:text-white\">\n      Profile\n    </a>\n    <a href=\"\" className=\"block py-2.5 px-4 rounded transition duration-200 hover:bg-blue-700 hover:text-white\">\n      Logout\n    </a>\n  </nav>\n</div>\n\n<div className=\"flex-1 p-10 text-2xl font-bold  bg-blue-900\">\n  <div className=\"container mx-auto\">\n    <div className=\"bg-white mx-auto rounded-2xl overflow-hidden shadow-lg \">\n        <div className=\"h-20 bg-green-500 flex items-center justify-between\">\n            <h1 className=\"text-white ml-4 border-2 py-2 px-4 rounded-full\">{count}</h1>\n            <p className=\"mr-20 text-white text-lg\">{script[count][0]}</p>\n            \n          </div>\n\n      <p className=\"py-6 text-black text-lg tracking-wide ml-16\">{script[count][1].replace(\"--A--first_name--B--\", client).replace(\"--A--city--B--\", city).replace(\"--A--address1--B--\", address)}</p>\n\n    </div>\n  </div>\n    \n  <div className=\"py-5 mr-6 \">\n\n    <button onClick={() => dispatch(incrementByAmount(1))} className=\"w-full sm:w-auto px-9 py-4   mb-4  text-base   font-semibold focus:ring-2 focus:ring-offset-2 focus:ring-offset-white focus:ring-gray-900 focus:outline-none transition-colors duration-200 rounded-full block  border-b border-green-300 bg-green-200 hover:bg-green-300 text-green-700\">\n        {script[count][2][0][0]}\n    </button>\n    <button onClick={() => dispatch(decrementByAmount(10))} className=\"w-full sm:w-auto px-9 py-4   mb-4  text-base   font-semibold focus:ring-2 focus:ring-offset-2 focus:ring-offset-white focus:ring-gray-900 focus:outline-none transition-colors duration-200 rounded-full block  border-b border-red-300 bg-red-200 hover:bg-red-300 text-red-700\">\n        {script[count][2][0][1]}\n    </button>\n\n    \n    \n\n    </div>\n    \n</div>\n\n</div>\n\n{showModal ? (\n        <>\n          <div\n            className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n          >\n            <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\n              {/*content*/}\n              <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                {/*header*/}\n                <div className=\"flex items-start justify-between p-5 border-b border-solid border-blueGray-200 rounded-t\">\n                  <h3 className=\"text-3xl font-semibold\">\n                    Modal Title\n                  </h3>\n                  <button\n                    className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                    onClick={() => setShowModal(false)}\n                  >\n                    <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                      Ã—\n                    </span>\n                  </button>\n                </div>\n                {/*body*/}\n                <div className=\"relative p-6 flex-auto\">\n                <div class=\"flex w-full h-auto py-5 px-2 justify-center items-center bg-gray-200 rounded text-center text-gray-500\">\n                <input value={client}\n          onChange={(e) => setClient(e.target.value)} type=\"text\" placeholder=\"text....\" class=\"border border-gray-300 p-2 my-2 rounded-md focus:outline-none focus:ring-2 ring-blue-200\" />\n            </div>\n\n            <div class=\"flex w-full h-auto py-5 px-2 justify-center items-center bg-gray-200 rounded text-center text-gray-500\">\n                <input value={city}\n          onChange={(e) => setCity(e.target.value)} type=\"text\" placeholder=\"text....\" class=\"border border-gray-300 p-2 my-2 rounded-md focus:outline-none focus:ring-2 ring-blue-200\" />\n            </div>\n\n            <div class=\"flex w-full h-auto py-5 px-2 justify-center items-center bg-gray-200 rounded text-center text-gray-500\">\n                <input value={address}\n          onChange={(e) => setAddress(e.target.value)} type=\"text\" placeholder=\"text....\" class=\"border border-gray-300 p-2 my-2 rounded-md focus:outline-none focus:ring-2 ring-blue-200\" />\n            </div>\n                </div>\n                {/*footer*/}\n                <div className=\"flex items-center justify-end p-6 border-t border-solid border-blueGray-200 rounded-b\">\n                  <button\n                    className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n                    type=\"button\"\n                    onClick={() => setShowModal(false)}\n                  >\n                    Close\n                  </button>\n                  <button\n                    className=\"bg-emerald-500 text-white active:bg-emerald-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n                    type=\"button\"\n                    onClick={() => setShowModal(false)}\n                  >\n                    Save Changes\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n        </>\n      ) : null}\n      </div>\n    );\n  }\n  \n  export default App;\n  ","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\n// main.js, imports are omitted for brevity.\n/*window.counter = function() {\n  return {\n    count: 0,\n    inc() {\n      this.count += 1;\n    }\n  };\n};\n*/\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}